import asyncio
import logging

from fastapi import FastAPI
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message, WebAppInfo, ReplyKeyboardMarkup, KeyboardButton
from aiogram.exceptions import TelegramAPIError

TELEGRAM_BOT_TOKEN = "8039605779:AAEm7vfc1eNRw5z9mDoPLSXa3no7W_r0Zh8"
WEB_APP_URL = "https://tg-miniapp-roullete.netlify.app/"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

app = FastAPI()

@app.get("/")
async def root():
    return {"message": "FastAPI —Ä–∞–±–æ—Ç–∞–µ—Ç!"}

@dp.message(Command(commands=["start"]))
async def cmd_start(message: Message):
    web_app_button = KeyboardButton(
        text="–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üé≤",
        web_app=WebAppInfo(url=WEB_APP_URL)
    )
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[web_app_button]],
        resize_keyboard=True
    )

    try:
        await message.answer(
            "–ü—Ä–∏–≤–µ—Ç! –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–∏—Å—Ç—É–ø–∞–π—Ç–µ –∫ –∞–∫—Ü–∏–∏!",
            reply_markup=keyboard
        )
        await message.answer("‚ö†Ô∏è –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–∫–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è.")
    except TelegramAPIError as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def start_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ (polling)"""
    await dp.start_polling(bot)

async def main():
    """–ó–∞–ø—É—Å–∫ FastAPI + Telegram –±–æ—Ç–∞"""
    import uvicorn

    config = uvicorn.Config(app=app, host="0.0.0.0", port=8000, log_level="info", reload=False)
    server = uvicorn.Server(config)

    # –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI —Å–µ—Ä–≤–µ—Ä –∏ Telegram –±–æ—Ç–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    api_task = asyncio.create_task(server.serve())
    bot_task = asyncio.create_task(start_bot())

    await asyncio.gather(api_task, bot_task)

if __name__ == "__main__":
    asyncio.run(main())
