from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import (
    Message,
    WebAppInfo,
    MenuButtonWebApp,
    ChatMember,
)
from aiogram.exceptions import TelegramAPIError
import logging
import asyncio

TELEGRAM_BOT_TOKEN = "8039605779:AAEm7vfc1eNRw5z9mDoPLSXa3no7W_r0Zh8"
#WEB_APP_URL = "http://80.93.187.149:8080/"
WEB_APP_URL = "https://tg-miniapp-roullete.netlify.app"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

# CHANNEL_USERNAME = "@laifenrussia"

# async def is_user_subscribed(user_id: int) -> bool:
#     try:
#         member: ChatMember = await bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
#         return member.status in ["member", "administrator", "creator"]
#     except TelegramAPIError as e:
#         logging.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
#         return False

@dp.message(Command(commands=["start"]))
async def cmd_start(message: Message):
    user_id = message.from_user.id

    # if not await is_user_subscribed(user_id):
    #     await message.answer("–ß—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –≤ —Ä—É–ª–µ—Ç–∫—É, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: https://t.me/laifenrussia –∏ —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏—Ç–µ /start")
    #     return

    try:
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ üìé –≤ –º–µ–Ω—é.")
    except TelegramAPIError as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def on_startup():
    try:
        await bot.set_chat_menu_button(
            menu_button=MenuButtonWebApp(
                text="üé∞ –û—Ç–∫—Ä—ã—Ç—å —Ä—É–ª–µ—Ç–∫—É",
                web_app=WebAppInfo(url=WEB_APP_URL)
            )
        )
        logging.info("–ú–µ–Ω—é WebApp —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
    except TelegramAPIError as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –º–µ–Ω—é WebApp: {e}")

async def start_bot():
    await on_startup()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(start_bot())
